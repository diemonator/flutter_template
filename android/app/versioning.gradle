def debugKeystoreProperties = new Properties()
def debugKeystorePropertiesFile = rootProject.file('debug-key.properties')
if (debugKeystorePropertiesFile.exists()) {
    debugKeystoreProperties.load(new FileInputStream(debugKeystorePropertiesFile))
}

def releaseKeystoreProperties = new Properties()
def releaseKeystorePropertiesFile = rootProject.file('release-key.properties')
if (releaseKeystorePropertiesFile.exists()) {
    releaseKeystoreProperties.load(new FileInputStream(releaseKeystorePropertiesFile))
}

android {
    signingConfigs {
        if (project.hasProperty("signing")) {
            release {
                storeFile file(keyStore)
                storePassword keyStorePassword
                keyAlias alias
                keyPassword keyPass
            }
        } else if (releaseKeystorePropertiesFile.exists()) {
            release {
                keyAlias releaseKeystoreProperties['keyAlias']
                keyPassword releaseKeystoreProperties['keyPassword']
                storeFile releaseKeystoreProperties['storeFile'] ? file(releaseKeystoreProperties['storeFile']) : null
                storePassword releaseKeystoreProperties['storePassword']
            }
        }

        if (debugKeystorePropertiesFile.exists()) {
            customDebug {
                keyAlias debugKeystoreProperties['keyAlias']
                keyPassword debugKeystoreProperties['keyPassword']
                storeFile debugKeystoreProperties['storeFile'] ? file(debugKeystoreProperties['storeFile']) : null
                storePassword debugKeystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            if (signingConfigs.hasProperty("release")) {
                signingConfig signingConfigs.release
            } else {
                signingConfig signingConfigs.debug
            }
        }

        debug {
            if (signingConfigs.hasProperty("customDebug")) {
                signingConfig signingConfigs.customDebug
            } else {
                signingConfig signingConfigs.debug
            }
        }
    }
}

def final staticVerCode = 43
def final staticVerName = "5.3"

ext.getVersionName = { ->
    if (project.hasProperty("buildName") && buildName != "") {
        return buildName
    } else {
        return staticVerName
    }
}

ext.getVersionCode = { ->
    if (project.hasProperty("buildNumber")) {
        return buildNumber.toInteger()
    } else {
        return staticVerCode
    }
}